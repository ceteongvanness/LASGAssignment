//====================================================================================================
// Base code generated with Vector: WFA Gen (Build 3.0.5898.28997)
// Layered Architecture Solution Guidance (http://layerguidance.codeplex.com)
//
// Generated by et.cheah at ENGTEONG on 11/30/2016 11:22:04 
//====================================================================================================

using System;
using System.Activities;
using System.Collections.Generic;
using Ass5.Entities;
using Ass5.Business;

namespace Ass5.Workflows.Activities
{
    /// <summary>
    /// Apply workflow activity.
    /// </summary>
    [Serializable]
    public sealed class Apply : CodeActivity
    {
        // Argument declaration.
        public OutArgument<Task> ApplyResult { get; set; }
        public InArgument<Task> Task { get; set; }

        protected override void Execute(CodeActivityContext context)
        {
            // Variable declarations (if any).
            Task applyResult = default(Task);

            // Argument initialization (if any).
            Task task = context.GetValue(this.Task);

            // Instantiate business components.
            var taskComponent = new TaskComponent();

            // Call business component methods.
            applyResult = taskComponent.Apply(task);

            // Set value to Out arguments (if any).
            context.SetValue(this.ApplyResult, applyResult);
        }
    }
}
