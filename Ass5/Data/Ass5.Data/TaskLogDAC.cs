//====================================================================================================
// Base code generated with Momentum: DAC Gen (Build 3.0.5898.28997)
// Layered Architecture Solution Guidance (http://layerguidance.codeplex.com)
//
// Generated by et.cheah at ENGTEONG on 11/30/2016 11:00:42 
//====================================================================================================

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Text;
using System.Data;
using System.Data.Common;
using Microsoft.Practices.EnterpriseLibrary.Data;
using Microsoft.Practices.EnterpriseLibrary.Data.Sql;
using Ass5.Entities;

namespace Ass5.Data
{
    /// <summary>
    /// TaskLog data access component. Manages CRUD operations for the TaskLog table.
    /// </summary>
    public partial class TaskLogDAC : DataAccessComponent
    {
        /// <summary>
        /// Inserts a new row in the TaskLog table.
        /// </summary>
        /// <param name="taskLog">A TaskLog object.</param>
        /// <returns>An updated TaskLog object.</returns>
        public TaskLog Create(TaskLog taskLog)
        {
            const string SQL_STATEMENT =
                "INSERT INTO dbo.TaskLog ( [TaskID], [TaskStatus]) " +
                "VALUES(@TaskID, @TaskStatus);  ";

            // Connect to database.
            var db = new SqlDatabase(base.ConnectionString);
            using (DbCommand cmd = db.GetSqlStringCommand(SQL_STATEMENT))
            {
                // Set parameter values.
                db.AddInParameter(cmd, "@TaskID", DbType.String, taskLog.TaskID);
                db.AddInParameter(cmd, "@TaskStatus", DbType.String, taskLog.TaskStatus);

                db.ExecuteNonQuery(cmd);
            }

            return taskLog;
        }
    }
}

