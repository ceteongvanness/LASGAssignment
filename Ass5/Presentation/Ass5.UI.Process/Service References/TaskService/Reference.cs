//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Ass5.UI.Process.TaskService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TaskService.ITaskService")]
    public interface ITaskService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITaskService/Export", ReplyAction="http://tempuri.org/ITaskService/ExportResponse")]
        void Export();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITaskService/Export", ReplyAction="http://tempuri.org/ITaskService/ExportResponse")]
        System.Threading.Tasks.Task ExportAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITaskService/GetTask", ReplyAction="http://tempuri.org/ITaskService/GetTaskResponse")]
        Ass5.Entities.Task GetTask(int taskID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITaskService/GetTask", ReplyAction="http://tempuri.org/ITaskService/GetTaskResponse")]
        System.Threading.Tasks.Task<Ass5.Entities.Task> GetTaskAsync(int taskID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITaskService/GetUserPermission", ReplyAction="http://tempuri.org/ITaskService/GetUserPermissionResponse")]
        MK.Framework.ACE.Entities.AccessPolicy GetUserPermission(long userID, string policyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITaskService/GetUserPermission", ReplyAction="http://tempuri.org/ITaskService/GetUserPermissionResponse")]
        System.Threading.Tasks.Task<MK.Framework.ACE.Entities.AccessPolicy> GetUserPermissionAsync(long userID, string policyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITaskService/ListTask", ReplyAction="http://tempuri.org/ITaskService/ListTaskResponse")]
        System.Collections.Generic.List<Ass5.Entities.Task> ListTask();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITaskService/ListTask", ReplyAction="http://tempuri.org/ITaskService/ListTaskResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Ass5.Entities.Task>> ListTaskAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITaskService/LoginVerify", ReplyAction="http://tempuri.org/ITaskService/LoginVerifyResponse")]
        MK.Framework.ACE.Entities.User LoginVerify(string Username, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITaskService/LoginVerify", ReplyAction="http://tempuri.org/ITaskService/LoginVerifyResponse")]
        System.Threading.Tasks.Task<MK.Framework.ACE.Entities.User> LoginVerifyAsync(string Username, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITaskService/Update", ReplyAction="http://tempuri.org/ITaskService/UpdateResponse")]
        void Update(Ass5.Entities.Task task, Ass5.Entities.TaskLog taskLog);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITaskService/Update", ReplyAction="http://tempuri.org/ITaskService/UpdateResponse")]
        System.Threading.Tasks.Task UpdateAsync(Ass5.Entities.Task task, Ass5.Entities.TaskLog taskLog);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITaskService/Apply", ReplyAction="http://tempuri.org/ITaskService/ApplyResponse")]
        Ass5.Entities.Task Apply(Ass5.Entities.Task task);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITaskService/Apply", ReplyAction="http://tempuri.org/ITaskService/ApplyResponse")]
        System.Threading.Tasks.Task<Ass5.Entities.Task> ApplyAsync(Ass5.Entities.Task task);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITaskService/Approve", ReplyAction="http://tempuri.org/ITaskService/ApproveResponse")]
        void Approve(Ass5.Entities.Task task);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITaskService/Approve", ReplyAction="http://tempuri.org/ITaskService/ApproveResponse")]
        System.Threading.Tasks.Task ApproveAsync(Ass5.Entities.Task task);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITaskService/Cancel", ReplyAction="http://tempuri.org/ITaskService/CancelResponse")]
        void Cancel(Ass5.Entities.Task task);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITaskService/Cancel", ReplyAction="http://tempuri.org/ITaskService/CancelResponse")]
        System.Threading.Tasks.Task CancelAsync(Ass5.Entities.Task task);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITaskService/Delay", ReplyAction="http://tempuri.org/ITaskService/DelayResponse")]
        void Delay(Ass5.Entities.Task task);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITaskService/Delay", ReplyAction="http://tempuri.org/ITaskService/DelayResponse")]
        System.Threading.Tasks.Task DelayAsync(Ass5.Entities.Task task);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITaskService/Reject", ReplyAction="http://tempuri.org/ITaskService/RejectResponse")]
        void Reject(Ass5.Entities.Task task);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITaskService/Reject", ReplyAction="http://tempuri.org/ITaskService/RejectResponse")]
        System.Threading.Tasks.Task RejectAsync(Ass5.Entities.Task task);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITaskServiceChannel : Ass5.UI.Process.TaskService.ITaskService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TaskServiceClient : System.ServiceModel.ClientBase<Ass5.UI.Process.TaskService.ITaskService>, Ass5.UI.Process.TaskService.ITaskService {
        
        public TaskServiceClient() {
        }
        
        public TaskServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TaskServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TaskServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TaskServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void Export() {
            base.Channel.Export();
        }
        
        public System.Threading.Tasks.Task ExportAsync() {
            return base.Channel.ExportAsync();
        }
        
        public Ass5.Entities.Task GetTask(int taskID) {
            return base.Channel.GetTask(taskID);
        }
        
        public System.Threading.Tasks.Task<Ass5.Entities.Task> GetTaskAsync(int taskID) {
            return base.Channel.GetTaskAsync(taskID);
        }
        
        public MK.Framework.ACE.Entities.AccessPolicy GetUserPermission(long userID, string policyId) {
            return base.Channel.GetUserPermission(userID, policyId);
        }
        
        public System.Threading.Tasks.Task<MK.Framework.ACE.Entities.AccessPolicy> GetUserPermissionAsync(long userID, string policyId) {
            return base.Channel.GetUserPermissionAsync(userID, policyId);
        }
        
        public System.Collections.Generic.List<Ass5.Entities.Task> ListTask() {
            return base.Channel.ListTask();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Ass5.Entities.Task>> ListTaskAsync() {
            return base.Channel.ListTaskAsync();
        }
        
        public MK.Framework.ACE.Entities.User LoginVerify(string Username, string Password) {
            return base.Channel.LoginVerify(Username, Password);
        }
        
        public System.Threading.Tasks.Task<MK.Framework.ACE.Entities.User> LoginVerifyAsync(string Username, string Password) {
            return base.Channel.LoginVerifyAsync(Username, Password);
        }
        
        public void Update(Ass5.Entities.Task task, Ass5.Entities.TaskLog taskLog) {
            base.Channel.Update(task, taskLog);
        }
        
        public System.Threading.Tasks.Task UpdateAsync(Ass5.Entities.Task task, Ass5.Entities.TaskLog taskLog) {
            return base.Channel.UpdateAsync(task, taskLog);
        }
        
        public Ass5.Entities.Task Apply(Ass5.Entities.Task task) {
            return base.Channel.Apply(task);
        }
        
        public System.Threading.Tasks.Task<Ass5.Entities.Task> ApplyAsync(Ass5.Entities.Task task) {
            return base.Channel.ApplyAsync(task);
        }
        
        public void Approve(Ass5.Entities.Task task) {
            base.Channel.Approve(task);
        }
        
        public System.Threading.Tasks.Task ApproveAsync(Ass5.Entities.Task task) {
            return base.Channel.ApproveAsync(task);
        }
        
        public void Cancel(Ass5.Entities.Task task) {
            base.Channel.Cancel(task);
        }
        
        public System.Threading.Tasks.Task CancelAsync(Ass5.Entities.Task task) {
            return base.Channel.CancelAsync(task);
        }
        
        public void Delay(Ass5.Entities.Task task) {
            base.Channel.Delay(task);
        }
        
        public System.Threading.Tasks.Task DelayAsync(Ass5.Entities.Task task) {
            return base.Channel.DelayAsync(task);
        }
        
        public void Reject(Ass5.Entities.Task task) {
            base.Channel.Reject(task);
        }
        
        public System.Threading.Tasks.Task RejectAsync(Ass5.Entities.Task task) {
            return base.Channel.RejectAsync(task);
        }
    }
}
